
Unit7_Section1_Task2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000104  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000104  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000178  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000042b  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000164  00000000  00000000  00000d7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000362  00000000  00000000  00000edf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001244  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000014a  00000000  00000000  00001278  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000a8  00000000  00000000  000013c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000146a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4f 00 	call	0x9e	; 0x9e <main>
  8a:	0c 94 80 00 	jmp	0x100	; 0x100 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <IO_init>:

void IO_init(void)
{
	//Output Init
	//Configure PortA as OutPut Port
	DDRA = 0xFF ;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	8a bb       	out	0x1a, r24	; 26
	//Init PortA with Zeros
	PORTA = 0 ;
  96:	1b ba       	out	0x1b, r1	; 27
	
	//Input Init
	//Configure PortC Pin0 as Input Pin
	ClearBit(DDRC,0);
  98:	a0 98       	cbi	0x14, 0	; 20
	//init PortC Pin0 as Pull up Input Pin
	SetBit(PORTC,0) ;
  9a:	a8 9a       	sbi	0x15, 0	; 21
}
  9c:	08 95       	ret

0000009e <main>:
int main(void)
{
	IO_init();
  9e:	0e 94 49 00 	call	0x92	; 0x92 <IO_init>
	int count = 0,Mutiplier=1,flag=1;
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
		}
		if(count == 8 && ReadBit(PINC,0) == 0)
		{
			PORTA = 0 ;
			count = 0 ;
			Mutiplier = 1 ;
  aa:	c1 e0       	ldi	r28, 0x01	; 1
  ac:	d0 e0       	ldi	r29, 0x00	; 0
			while(ReadBit(PINC,0) == 0); //single press				
		}
		if(count == 8 && ReadBit(PINC,0) == 0)
		{
			PORTA = 0 ;
			count = 0 ;
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	10 e0       	ldi	r17, 0x00	; 0
{
	IO_init();
	int count = 0,Mutiplier=1,flag=1;
    while(1)
    {
		if(ReadBit(PINC,0) == 0) //pressed
  b2:	98 99       	sbic	0x13, 0	; 19
  b4:	13 c0       	rjmp	.+38     	; 0xdc <main+0x3e>
		{
			while(ReadBit(PINC,0) == 0) ;
  b6:	98 9b       	sbis	0x13, 0	; 19
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <main+0x18>
			Mutiplier*=2 ;
  ba:	22 0f       	add	r18, r18
  bc:	33 1f       	adc	r19, r19
			PORTA = Mutiplier-1;
  be:	e2 2f       	mov	r30, r18
  c0:	e1 50       	subi	r30, 0x01	; 1
  c2:	eb bb       	out	0x1b, r30	; 27
			count ++ ;
  c4:	01 96       	adiw	r24, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	4f eb       	ldi	r20, 0xBF	; 191
  c8:	57 e2       	ldi	r21, 0x27	; 39
  ca:	69 e0       	ldi	r22, 0x09	; 9
  cc:	41 50       	subi	r20, 0x01	; 1
  ce:	50 40       	sbci	r21, 0x00	; 0
  d0:	60 40       	sbci	r22, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x2e>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x38>
  d6:	00 00       	nop
			_delay_ms(3000) ;
			
			while(ReadBit(PINC,0) == 0); //single press				
  d8:	98 9b       	sbis	0x13, 0	; 19
  da:	fe cf       	rjmp	.-4      	; 0xd8 <main+0x3a>
		}
		if(count == 8 && ReadBit(PINC,0) == 0)
  dc:	88 30       	cpi	r24, 0x08	; 8
  de:	91 05       	cpc	r25, r1
  e0:	41 f7       	brne	.-48     	; 0xb2 <main+0x14>
  e2:	98 99       	sbic	0x13, 0	; 19
  e4:	e6 cf       	rjmp	.-52     	; 0xb2 <main+0x14>
		{
			PORTA = 0 ;
  e6:	1b ba       	out	0x1b, r1	; 27
  e8:	6f eb       	ldi	r22, 0xBF	; 191
  ea:	77 e2       	ldi	r23, 0x27	; 39
  ec:	89 e0       	ldi	r24, 0x09	; 9
  ee:	61 50       	subi	r22, 0x01	; 1
  f0:	70 40       	sbci	r23, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x50>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x5a>
  f8:	00 00       	nop
			count = 0 ;
			Mutiplier = 1 ;
  fa:	9e 01       	movw	r18, r28
			while(ReadBit(PINC,0) == 0); //single press				
		}
		if(count == 8 && ReadBit(PINC,0) == 0)
		{
			PORTA = 0 ;
			count = 0 ;
  fc:	c8 01       	movw	r24, r16
  fe:	d9 cf       	rjmp	.-78     	; 0xb2 <main+0x14>

00000100 <_exit>:
 100:	f8 94       	cli

00000102 <__stop_program>:
 102:	ff cf       	rjmp	.-2      	; 0x102 <__stop_program>
