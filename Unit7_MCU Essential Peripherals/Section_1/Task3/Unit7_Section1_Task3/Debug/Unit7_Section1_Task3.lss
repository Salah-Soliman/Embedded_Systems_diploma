
Unit7_Section1_Task3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000015c  000001d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000928  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004a8  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000142  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000038a  00000000  00000000  00000f92  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000131c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000013e  00000000  00000000  00001350  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000206  00000000  00000000  0000148e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e5       	ldi	r30, 0x5C	; 92
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  8a:	0c 94 ac 00 	jmp	0x158	; 0x158 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <IO_init>:
#define F_CPU 8000000UL

void IO_init(void)
{
	//Output Init
	SetBit(DDRD,4) ;
  92:	8c 9a       	sbi	0x11, 4	; 17
	ClearBit(PORTD,4) ;
  94:	94 98       	cbi	0x12, 4	; 18
	
	DDRC = 0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  9a:	15 ba       	out	0x15, r1	; 21
	
	//Input Init
	//Configure PortD Pin0 as Input Pin
	ClearBit(DDRD,0);
  9c:	88 98       	cbi	0x11, 0	; 17
	//init PortC Pin0 as Pull down Input Pin
	SetBit(PORTD,0) ;
  9e:	90 9a       	sbi	0x12, 0	; 18
	
	//Configure PortD Pin1 as Input Pin
	ClearBit(DDRD,1);
  a0:	89 98       	cbi	0x11, 1	; 17
	//init PortC Pin1 as Pull down Input Pin
	SetBit(PORTD,1) ;
  a2:	91 9a       	sbi	0x12, 1	; 18
}
  a4:	08 95       	ret

000000a6 <main>:
int main(void)
{
	IO_init();
  a6:	0e 94 49 00 	call	0x92	; 0x92 <IO_init>
	int i,j,inputVal;
    while(1)
    {
		inputVal = PIND & 0xFF ;
		switch(inputVal)
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	70 e0       	ldi	r23, 0x00	; 0
				{
					for(j=0; j<10; j++)
					{
						PORTC =0b0111 | (j<<4) ;
						_delay_ms(1000);
						PORTC=0b1011 | (i<<4) ;
  ae:	a6 2f       	mov	r26, r22
  b0:	f7 2f       	mov	r31, r23
{
	IO_init();
	int i,j,inputVal;
    while(1)
    {
		inputVal = PIND & 0xFF ;
  b2:	80 b3       	in	r24, 0x10	; 16
  b4:	90 e0       	ldi	r25, 0x00	; 0
		switch(inputVal)
  b6:	81 30       	cpi	r24, 0x01	; 1
  b8:	91 05       	cpc	r25, r1
  ba:	21 f0       	breq	.+8      	; 0xc4 <main+0x1e>
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	91 05       	cpc	r25, r1
  c0:	c1 f7       	brne	.-16     	; 0xb2 <main+0xc>
  c2:	3b c0       	rjmp	.+118    	; 0x13a <main+0x94>
		{
			case 1:
				SetBit(PORTD,4);
  c4:	94 9a       	sbi	0x12, 4	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	0f eb       	ldi	r16, 0xBF	; 191
  c8:	17 e2       	ldi	r17, 0x27	; 39
  ca:	29 e0       	ldi	r18, 0x09	; 9
  cc:	01 50       	subi	r16, 0x01	; 1
  ce:	10 40       	sbci	r17, 0x00	; 0
  d0:	20 40       	sbci	r18, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x26>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x30>
  d6:	00 00       	nop
				_delay_ms(3000);
				ClearBit(PORTD,4) ;
  d8:	94 98       	cbi	0x12, 4	; 18
  da:	2f eb       	ldi	r18, 0xBF	; 191
  dc:	37 e2       	ldi	r19, 0x27	; 39
  de:	49 e0       	ldi	r20, 0x09	; 9
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	30 40       	sbci	r19, 0x00	; 0
  e4:	40 40       	sbci	r20, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x3a>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x44>
  ea:	00 00       	nop
  ec:	e2 cf       	rjmp	.-60     	; 0xb2 <main+0xc>
			case 2:
				for (i=0; i<10; i++)
				{
					for(j=0; j<10; j++)
					{
						PORTC =0b0111 | (j<<4) ;
  ee:	9c 01       	movw	r18, r24
  f0:	22 95       	swap	r18
  f2:	32 95       	swap	r19
  f4:	30 7f       	andi	r19, 0xF0	; 240
  f6:	32 27       	eor	r19, r18
  f8:	20 7f       	andi	r18, 0xF0	; 240
  fa:	32 27       	eor	r19, r18
  fc:	27 60       	ori	r18, 0x07	; 7
  fe:	25 bb       	out	0x15, r18	; 21
 100:	0f e3       	ldi	r16, 0x3F	; 63
 102:	1d e0       	ldi	r17, 0x0D	; 13
 104:	23 e0       	ldi	r18, 0x03	; 3
 106:	01 50       	subi	r16, 0x01	; 1
 108:	10 40       	sbci	r17, 0x00	; 0
 10a:	20 40       	sbci	r18, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x60>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x6a>
 110:	00 00       	nop
						_delay_ms(1000);
						PORTC=0b1011 | (i<<4) ;
 112:	e5 bb       	out	0x15, r30	; 21
 114:	0f e3       	ldi	r16, 0x3F	; 63
 116:	1d e0       	ldi	r17, 0x0D	; 13
 118:	23 e0       	ldi	r18, 0x03	; 3
 11a:	01 50       	subi	r16, 0x01	; 1
 11c:	10 40       	sbci	r17, 0x00	; 0
 11e:	20 40       	sbci	r18, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x74>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x7e>
 124:	00 00       	nop
				_delay_ms(3000);
				break;
			case 2:
				for (i=0; i<10; i++)
				{
					for(j=0; j<10; j++)
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	8a 30       	cpi	r24, 0x0A	; 10
 12a:	91 05       	cpc	r25, r1
 12c:	01 f7       	brne	.-64     	; 0xee <main+0x48>
				_delay_ms(3000);
				ClearBit(PORTD,4) ;
				_delay_ms(3000);
				break;
			case 2:
				for (i=0; i<10; i++)
 12e:	4f 5f       	subi	r20, 0xFF	; 255
 130:	5f 4f       	sbci	r21, 0xFF	; 255
 132:	4a 30       	cpi	r20, 0x0A	; 10
 134:	51 05       	cpc	r21, r1
 136:	11 f4       	brne	.+4      	; 0x13c <main+0x96>
 138:	0d c0       	rjmp	.+26     	; 0x154 <main+0xae>
	IO_init();
	int i,j,inputVal;
    while(1)
    {
		inputVal = PIND & 0xFF ;
		switch(inputVal)
 13a:	ab 01       	movw	r20, r22
				{
					for(j=0; j<10; j++)
					{
						PORTC =0b0111 | (j<<4) ;
						_delay_ms(1000);
						PORTC=0b1011 | (i<<4) ;
 13c:	ca 01       	movw	r24, r20
 13e:	82 95       	swap	r24
 140:	92 95       	swap	r25
 142:	90 7f       	andi	r25, 0xF0	; 240
 144:	98 27       	eor	r25, r24
 146:	80 7f       	andi	r24, 0xF0	; 240
 148:	98 27       	eor	r25, r24
 14a:	e8 2f       	mov	r30, r24
 14c:	eb 60       	ori	r30, 0x0B	; 11
 14e:	8a 2f       	mov	r24, r26
 150:	9f 2f       	mov	r25, r31
 152:	cd cf       	rjmp	.-102    	; 0xee <main+0x48>
						_delay_ms(1000);
					}
				}
				PORTC =0x00;
 154:	15 ba       	out	0x15, r1	; 21
				break;
 156:	ad cf       	rjmp	.-166    	; 0xb2 <main+0xc>

00000158 <_exit>:
 158:	f8 94       	cli

0000015a <__stop_program>:
 15a:	ff cf       	rjmp	.-2      	; 0x15a <__stop_program>
